基于动态资源选择策略的微服务工作流调度算法

基于动态资源选择策略 （ｄｙｎａｍｉｃ　ｒｅｓｏｕｒｃｅ　ｓｅｌｅｃｔｉｏｎ　ｓｔｒａｔｅｇｙ，ＤＲＳＳ）的微服务工作流调度算法———ＤＲＳＳ调度算法
工作流调度问题是一个NP-hard问题，在目前的研究中，许多Qos (quality of service）指标常常被视为问题的优化目标和约束条件，如成本、时间、能量消耗、安全，本文研究的是截止期约束下优化成本的工作流调度问题。由于NP-hard问题无法在可接受的计算时间范围内找到大规模问题实例的最优解。所以，目前的研究通常采取启发式算法来解决这一问题。

DAG ，也就是 Directed Acyclic Graph 有向无环图

如果任务之间存在数据传输，则需要
在边ｅｉｊ上加上ｄａｔａｉ，ｊ属性，表示任务之间需要传输的数据
量。此时，对任务ｔｉ而言，只有当ｔｉ的直接前驱任务集合
ｐｒｅｄ（ｔｉ）中所有的任务都执行完，且数据都被传输完之后，
ｔｉ 才可以开始执行。所有微服务任务都事先给定执行任务
中所需 要 的 计 算 资 源，用 需 求 资 源 向 量 Ｒｒｉ ＝（Ｒｒｉ，１，…，
Ｒｒｉ，ｍ）表示，其中 ｍ 是计算资源种类的数目。

用余弦向量确定相似度资源消耗，用价格（最贵当前百分比）确定成本，用加权因子确定权重（已调度/总），前期余弦主要影响，后期价格主要影响
紧急度：（子截止期-（最早开始和数据处时间和））/未调度的任务数


算法１：ＤＲＳＳ调度算法的执行流程
输入：工作流 ＤＡＧ，截止期 Ｄ
输出：调度方案列表ＳＬ
（１）根据式 （１）、式 （２）、式 （６）、式 （７）计算出各
个任务的ＥＳＴ 参数与子截止期ｓｄ
（２）将ｔｅｎｔｒｙ加入到就绪队列
（３）循环开始：当就绪队列不为空时
（４）使用式 （８）计算就绪队列中所有任务的紧急度ｕｉ
（５）取出紧急度ｕｉ最小的任务ｔｃｕｒ，同时将该任务从就
绪队列中移除，根据式 （９）～式 （１１）找到可用的虚拟机
实例集合ψ
（６）如果ψ为空，则为该任务分配最贵的虚拟机实例。
如果ψ不为空，根据式 （１２）～式 （１４），使用动态资源选
择策略在ψ中为任务ｔｃｕｒ选择虚拟机实例ｖｓｅｌｅｃｔ，同时更新虚
拟机实例ｖｓｅｌｅｃｔ的可用资源向量
（７）将 ＜ｔｃｕｒ，ｖｓｅｌｅｃｔ ＞ 添加到调度方案列表ＳＬ 中
（８）检测正在执行的任务，若有任务已经完成，获取该
任务的实际执行时间并更新该任务的后继任务的 ＥＳＴ 参
数，同时更新对应虚拟机实例的可用资源向量，并将任务
执行之后受影响而转变状态的就绪任务添加到就绪队列中
